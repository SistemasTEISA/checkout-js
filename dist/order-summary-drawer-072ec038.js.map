{"version":3,"file":"order-summary-drawer-072ec038.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/order/getLineItemsCount.ts","webpack://checkout/./packages/ui/src/icon/IconCloseWithBorder.tsx","webpack://checkout/./packages/core/src/app/order/OrderModalSummarySubheader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryModal.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryDrawer.tsx","webpack://checkout/./packages/ui/src/button/Button.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalTrigger.tsx"],"sourcesContent":["import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function getLineItemsCount({\r\n    physicalItems,\r\n    digitalItems,\r\n    giftCertificates,\r\n    customItems,\r\n}: LineItemMap): number {\r\n    return (\r\n        physicalItems.length +\r\n        digitalItems.length +\r\n        giftCertificates.length +\r\n        (customItems || []).length\r\n    );\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconCloseWithBorder: FunctionComponent = () => (\r\n    <svg fill=\"none\" height=\"37\" viewBox=\"0 0 38 37\" width=\"38\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path\r\n            d=\"M38 18.5C38 28.7173 29.7173 37 19.5 37C9.28273 37 1 28.7173 1 18.5C1 8.28273 9.28273 0 19.5 0C29.7173 0 38 8.28273 38 18.5Z\"\r\n            fill=\"#F3F3F3\"\r\n        />\r\n        <path\r\n            clipRule=\"evenodd\"\r\n            d=\"M24.6671 24.6674L12.9998 13.0002L14.4141 11.5859L26.0813 23.2532L24.6671 24.6674Z\"\r\n            fill=\"black\"\r\n            fillRule=\"evenodd\"\r\n        />\r\n        <path\r\n            clipRule=\"evenodd\"\r\n            d=\"M25.6674 13.0004L14.0002 24.6676L12.5859 23.2534L24.2532 11.5862L25.6674 13.0004Z\"\r\n            fill=\"black\"\r\n            fillRule=\"evenodd\"\r\n        />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconCloseWithBorder);\r\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport getItemsCount from './getItemsCount';\r\n\r\nexport interface OrderModalSummarySubheaderProps {\r\n    items: LineItemMap\r\n    amountWithCurrency: ReactNode;\r\n    shopperCurrencyCode: string;\r\n    storeCurrencyCode: string;\r\n}\r\n\r\nconst OrderModalSummarySubheader: FunctionComponent<OrderModalSummarySubheaderProps> = ({\r\n    items,\r\n    shopperCurrencyCode,\r\n    storeCurrencyCode,\r\n    amountWithCurrency,\r\n}) => {\r\n    const itemsCount = getItemsCount(items);\r\n    const hasDifferentCurrency = shopperCurrencyCode !== storeCurrencyCode;\r\n    const itemsText = itemsCount === 1 ? 'cart.item' : 'cart.items';\r\n\r\n    return <>\r\n        {itemsCount} <TranslatedString id={itemsText} /> | {amountWithCurrency} {\r\n            hasDifferentCurrency && <span>({shopperCurrencyCode})</span>\r\n        }\r\n    </>;\r\n};\r\n\r\nexport default memo(OrderModalSummarySubheader);\r\n","import {\r\n    LineItemMap,\r\n    ShopperCurrency as ShopperCurrencyType,\r\n    StoreCurrency,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport React, { cloneElement, FunctionComponent, isValidElement, ReactNode } from 'react';\r\n\r\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\nimport { Button, IconCloseWithBorder } from '@bigcommerce/checkout/ui';\r\n\r\nimport { ShopperCurrency } from '../currency';\r\nimport { Modal, ModalHeader } from '../ui/modal';\r\nimport { isSmallScreen } from '../ui/responsive';\r\n\r\nimport OrderModalSummarySubheader from './OrderModalSummarySubheader';\r\nimport OrderSummaryItems from './OrderSummaryItems';\r\nimport OrderSummaryPrice from './OrderSummaryPrice';\r\nimport OrderSummarySection from './OrderSummarySection';\r\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\r\nimport OrderSummaryTotal from './OrderSummaryTotal';\r\n\r\nexport interface OrderSummaryDrawerProps {\r\n    children: ReactNode;\r\n    additionalLineItems?: ReactNode;\r\n    items: LineItemMap;\r\n    total: number;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrencyType;\r\n    isOpen: boolean;\r\n    headerLink?: ReactNode & React.HTMLProps<HTMLDivElement>;\r\n    onRequestClose?(): void;\r\n    onAfterOpen?(): void;\r\n}\r\n\r\nconst OrderSummaryModal: FunctionComponent<\r\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\r\n> = ({\r\n    additionalLineItems,\r\n    children,\r\n    isTaxIncluded,\r\n    taxes,\r\n    onRequestClose,\r\n    onAfterOpen,\r\n    storeCurrency,\r\n    shopperCurrency,\r\n    isOpen,\r\n    headerLink,\r\n    items,\r\n    total,\r\n    ...orderSummarySubtotalsProps\r\n}) => {\r\n    const displayInclusiveTax = isTaxIncluded && taxes && taxes.length > 0;\r\n\r\n    const subHeaderText = <OrderModalSummarySubheader\r\n        amountWithCurrency={<ShopperCurrency amount={total} />}\r\n        items={items}\r\n        shopperCurrencyCode={shopperCurrency.code}\r\n        storeCurrencyCode={storeCurrency.code}\r\n    />;\r\n\r\n    const continueButton = isSmallScreen() && <Button\r\n        className='cart-modal-continue'\r\n        data-test=\"manage-instrument-cancel-button\"\r\n        onClick={preventDefault(onRequestClose)}>\r\n            <TranslatedString id=\"cart.return_to_checkout\" />\r\n    </Button>;\r\n\r\n    return <Modal\r\n        additionalBodyClassName=\"cart-modal-body optimizedCheckout-orderSummary\"\r\n        additionalHeaderClassName=\"cart-modal-header optimizedCheckout-orderSummary with-continue-button\"\r\n        additionalModalClassName=\"optimizedCheckout-cart-modal\"\r\n        footer={continueButton}\r\n        header={renderHeader({\r\n            headerLink,\r\n            subHeaderText,\r\n            onRequestClose,\r\n        })}\r\n        isOpen={isOpen}\r\n        onAfterOpen={onAfterOpen}\r\n        onRequestClose={onRequestClose}\r\n    >\r\n        <OrderSummarySection>\r\n            <OrderSummaryItems displayLineItemsCount={false} items={items} />\r\n        </OrderSummarySection>\r\n        <OrderSummarySection>\r\n            <OrderSummarySubtotals isTaxIncluded={isTaxIncluded} taxes={taxes} {...orderSummarySubtotalsProps} />\r\n            {additionalLineItems}\r\n        </OrderSummarySection>\r\n        <OrderSummarySection>\r\n            <OrderSummaryTotal\r\n                orderAmount={total}\r\n                shopperCurrencyCode={shopperCurrency.code}\r\n                storeCurrencyCode={storeCurrency.code}\r\n            />\r\n        </OrderSummarySection>\r\n        {displayInclusiveTax && <OrderSummarySection>\r\n                <h5\r\n                    className=\"cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary\"\r\n                    data-test=\"tax-text\"\r\n                >\r\n                    <TranslatedString\r\n                        id=\"tax.inclusive_label\"\r\n                    />\r\n                </h5>\r\n                {(taxes || []).map((tax, index) => (\r\n                    <OrderSummaryPrice\r\n                        amount={tax.amount}\r\n                        key={index}\r\n                        label={tax.name}\r\n                        testId=\"cart-taxes\"\r\n                    />\r\n                ))}\r\n            </OrderSummarySection>}\r\n    </Modal>\r\n};\r\n\r\nconst renderHeader: FunctionComponent<{\r\n    headerLink?: ReactNode & React.HTMLProps<HTMLDivElement>;\r\n    subHeaderText: ReactNode;\r\n    onRequestClose?(): void;\r\n}> = ({ onRequestClose, headerLink, subHeaderText }) => {\r\n    let newHeaderLink;\r\n\r\n    if (isValidElement(headerLink)) {\r\n        newHeaderLink = cloneElement(headerLink, { className: 'modal-header-link cart-modal-link test' });\r\n    }\r\n\r\n    return <>\r\n        {newHeaderLink ?? headerLink}\r\n        <ModalHeader additionalClassName=\"cart-modal-title\">\r\n            <div>\r\n                <TranslatedString id=\"cart.cart_heading\" />\r\n                <div className='cart-heading-subheader'>{subHeaderText}</div>\r\n            </div>\r\n        </ModalHeader>\r\n        <a className=\"cart-modal-close\" href=\"#\" onClick={preventDefault(onRequestClose)}>\r\n            <span className=\"is-srOnly\">\r\n                <TranslatedString id=\"common.close_action\" />\r\n            </span>\r\n            <IconCloseWithBorder />\r\n        </a>\r\n    </>\r\n};\r\n\r\nexport default OrderSummaryModal;\r\n","import {\r\n    LineItemMap,\r\n    ShopperCurrency as ShopperCurrencyType,\r\n    StoreCurrency,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport classNames from 'classnames';\r\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { ShopperCurrency } from '../currency';\r\nimport { IconGiftCertificate } from '../ui/icon';\r\nimport { ModalTrigger } from '../ui/modal';\r\n\r\nimport getItemsCount from './getItemsCount';\r\nimport getLineItemsCount from './getLineItemsCount';\r\nimport OrderSummaryModal from './OrderSummaryModal';\r\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\r\nimport removeBundledItems from './removeBundledItems';\r\n\r\nexport interface OrderSummaryDrawerProps {\r\n    lineItems: LineItemMap;\r\n    total: number;\r\n    headerLink: ReactNode;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrencyType;\r\n    additionalLineItems?: ReactNode;\r\n}\r\n\r\nconst OrderSummaryDrawer: FunctionComponent<\r\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\r\n> = ({\r\n    additionalLineItems,\r\n    coupons,\r\n    discountAmount,\r\n    giftCertificates,\r\n    handlingAmount,\r\n    headerLink,\r\n    isTaxIncluded,\r\n    lineItems,\r\n    onRemovedCoupon,\r\n    onRemovedGiftCertificate,\r\n    shippingAmount,\r\n    shippingAmountBeforeDiscount,\r\n    shopperCurrency,\r\n    storeCreditAmount,\r\n    giftWrappingAmount,\r\n    storeCurrency,\r\n    subtotalAmount,\r\n    taxes,\r\n    total,\r\n    fees,\r\n}) => {\r\n    const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\r\n\r\n    const renderModal = useCallback(\r\n        (props: any) => (\r\n            <OrderSummaryModal\r\n                {...props}\r\n                additionalLineItems={additionalLineItems}\r\n                coupons={coupons}\r\n                discountAmount={discountAmount}\r\n                fees={fees}\r\n                giftCertificates={giftCertificates}\r\n                giftWrappingAmount={giftWrappingAmount}\r\n                handlingAmount={handlingAmount}\r\n                headerLink={headerLink}\r\n                isTaxIncluded={isTaxIncluded}\r\n                items={nonBundledLineItems}\r\n                onRemovedCoupon={onRemovedCoupon}\r\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\r\n                shippingAmount={shippingAmount}\r\n                shippingAmountBeforeDiscount={shippingAmountBeforeDiscount}\r\n                shopperCurrency={shopperCurrency}\r\n                storeCreditAmount={storeCreditAmount}\r\n                storeCurrency={storeCurrency}\r\n                subtotalAmount={subtotalAmount}\r\n                taxes={taxes}\r\n                total={total}\r\n            />\r\n        ),\r\n        [\r\n            additionalLineItems,\r\n            coupons,\r\n            discountAmount,\r\n            giftCertificates,\r\n            handlingAmount,\r\n            headerLink,\r\n            isTaxIncluded,\r\n            nonBundledLineItems,\r\n            onRemovedCoupon,\r\n            onRemovedGiftCertificate,\r\n            giftWrappingAmount,\r\n            shippingAmount,\r\n            shippingAmountBeforeDiscount,\r\n            shopperCurrency,\r\n            storeCreditAmount,\r\n            storeCurrency,\r\n            subtotalAmount,\r\n            taxes,\r\n            total,\r\n            fees,\r\n        ],\r\n    );\r\n\r\n    return (\r\n        <ModalTrigger modal={renderModal}>\r\n            {({ onClick, onKeyPress }) => (\r\n                <div\r\n                    className=\"cartDrawer optimizedCheckout-orderSummary\"\r\n                    onClick={onClick}\r\n                    onKeyPress={onKeyPress}\r\n                    tabIndex={0}\r\n                >\r\n                    <figure\r\n                        className={classNames('cartDrawer-figure', {\r\n                            'cartDrawer-figure--stack': getLineItemsCount(nonBundledLineItems) > 1,\r\n                        })}\r\n                    >\r\n                        <div className=\"cartDrawer-imageWrapper\">{getImage(nonBundledLineItems)}</div>\r\n                    </figure>\r\n                    <div className=\"cartDrawer-body\">\r\n                        <h3 className=\"cartDrawer-items optimizedCheckout-headingPrimary\">\r\n                            <TranslatedString\r\n                                data={{ count: getItemsCount(nonBundledLineItems) }}\r\n                                id=\"cart.item_count_text\"\r\n                            />\r\n                        </h3>\r\n                        <a>\r\n                            <TranslatedString id=\"cart.show_details_action\" />\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"cartDrawer-actions\">\r\n                        <h3 className=\"cartDrawer-total optimizedCheckout-headingPrimary\">\r\n                            <ShopperCurrency amount={total} />\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </ModalTrigger>\r\n    );\r\n};\r\n\r\nfunction getImage(lineItems: LineItemMap): ReactNode {\r\n    const productWithImage = lineItems.physicalItems[0] || lineItems.digitalItems[0];\r\n\r\n    if (productWithImage && productWithImage.imageUrl) {\r\n        return (\r\n            <img\r\n                alt={productWithImage.name}\r\n                data-test=\"cart-item-image\"\r\n                src={productWithImage.imageUrl}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (lineItems.giftCertificates.length) {\r\n        return <IconGiftCertificate />;\r\n    }\r\n}\r\n\r\nexport default memo(OrderSummaryDrawer);\r\n","import classNames from 'classnames';\r\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\r\n\r\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n    isFullWidth?: boolean;\r\n    isLoading?: boolean;\r\n    size?: ButtonSize;\r\n    testId?: string;\r\n    variant?: ButtonVariant;\r\n}\r\n\r\nexport enum ButtonVariant {\r\n    Primary = 'primary',\r\n    Secondary = 'secondary',\r\n    Action = 'action',\r\n}\r\n\r\nexport enum ButtonSize {\r\n    Small = 'small',\r\n    Tiny = 'tiny',\r\n    Large = 'large',\r\n}\r\n\r\nfunction getClassName(\r\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\r\n) {\r\n    const { className, isFullWidth, isLoading, size, variant } = props;\r\n\r\n    return classNames(\r\n        'button',\r\n        className,\r\n        { 'button--primary': variant === ButtonVariant.Primary },\r\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\r\n        { 'button--action': variant === ButtonVariant.Action },\r\n        { 'button--small': size === ButtonSize.Small },\r\n        { 'button--tiny': size === ButtonSize.Tiny },\r\n        { 'button--large': size === ButtonSize.Large },\r\n        { 'button--slab': isFullWidth },\r\n        {\r\n            'optimizedCheckout-buttonPrimary':\r\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\r\n        },\r\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\r\n        { 'is-loading': isLoading },\r\n    );\r\n}\r\n\r\nconst Button: FunctionComponent<ButtonProps> = ({\r\n    children,\r\n    className,\r\n    disabled,\r\n    isFullWidth,\r\n    isLoading,\r\n    size,\r\n    testId,\r\n    type,\r\n    variant,\r\n    ...rest\r\n}) => (\r\n    <button\r\n        {...rest}\r\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\r\n        data-test={testId}\r\n        disabled={disabled || isLoading}\r\n        type={type || 'button'}\r\n    >\r\n        {children}\r\n    </button>\r\n);\r\n\r\nexport default Button;\r\n","import React, {\r\n    Component,\r\n    KeyboardEvent,\r\n    KeyboardEventHandler,\r\n    MouseEventHandler,\r\n    ReactNode,\r\n} from 'react';\r\n\r\nexport interface ModalTriggerProps {\r\n    children(props: { onClick: MouseEventHandler; onKeyPress: KeyboardEventHandler<HTMLDivElement> }): ReactNode;\r\n    modal(props: ModalTriggerModalProps): ReactNode;\r\n}\r\n\r\nexport interface ModalTriggerModalProps {\r\n    isOpen: boolean;\r\n    onRequestClose(): void;\r\n}\r\n\r\nexport interface ModalTriggerState {\r\n    isOpen: boolean;\r\n}\r\n\r\nexport default class ModalTrigger extends Component<ModalTriggerProps, ModalTriggerState> {\r\n    state = {\r\n        isOpen: false,\r\n    };\r\n\r\n    private canHandleEvent = false;\r\n\r\n    componentDidMount(): void {\r\n        this.canHandleEvent = true;\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        this.canHandleEvent = false;\r\n    }\r\n\r\n    render() {\r\n        const { children, modal } = this.props;\r\n        const { isOpen } = this.state;\r\n\r\n        return (\r\n            <>\r\n                {children({\r\n                    onClick: this.handleOpen,\r\n                    onKeyPress: this.handleKeyOpen,\r\n                })}\r\n\r\n                {modal({\r\n                    isOpen,\r\n                    onRequestClose: this.handleClose,\r\n                })}\r\n            </>\r\n        );\r\n    }\r\n\r\n    private handleOpen: () => void = () => {\r\n        if (!this.canHandleEvent) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            isOpen: true,\r\n        });\r\n    };\r\n\r\n    private handleClose: () => void = () => {\r\n        if (!this.canHandleEvent) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            isOpen: false,\r\n        });\r\n    };\r\n\r\n    private handleKeyOpen: (keyboardEvent: KeyboardEvent<HTMLElement>) => void = (\r\n        keyboardEvent,\r\n    ) => {\r\n        if (keyboardEvent.key === 'Enter') {\r\n            this.handleOpen();\r\n        }\r\n    };\r\n}\r\n"],"names":["getLineItemsCount","physicalItems","digitalItems","giftCertificates","customItems","length","fill","height","viewBox","width","xmlns","d","clipRule","fillRule","memo","items","shopperCurrencyCode","storeCurrencyCode","amountWithCurrency","itemsCount","getItemsCount","hasDifferentCurrency","itemsText","TranslatedString","id","renderHeader","newHeaderLink","onRequestClose","headerLink","subHeaderText","isValidElement","cloneElement","className","ModalHeader","additionalClassName","href","onClick","preventDefault","additionalLineItems","isTaxIncluded","taxes","onAfterOpen","storeCurrency","shopperCurrency","isOpen","total","orderSummarySubtotalsProps","displayInclusiveTax","ShopperCurrency","amount","code","continueButton","isSmallScreen","Button","Modal","additionalBodyClassName","additionalHeaderClassName","additionalModalClassName","footer","header","OrderSummarySection","OrderSummaryItems","displayLineItemsCount","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","map","tax","index","OrderSummaryPrice","key","label","name","testId","coupons","discountAmount","handlingAmount","lineItems","onRemovedCoupon","onRemovedGiftCertificate","shippingAmount","shippingAmountBeforeDiscount","storeCreditAmount","giftWrappingAmount","subtotalAmount","fees","nonBundledLineItems","useMemo","removeBundledItems","renderModal","useCallback","props","ModalTrigger","modal","onKeyPress","tabIndex","productWithImage","imageUrl","alt","src","IconGiftCertificate","getImage","data","count","ButtonVariant","ButtonSize","getClassName","isFullWidth","isLoading","size","variant","Primary","Secondary","Action","Small","Tiny","Large","children","disabled","type","rest","state","canHandleEvent","handleOpen","setState","handleClose","handleKeyOpen","keyboardEvent","componentDidMount","this","componentWillUnmount","render","Component"],"sourceRoot":""}