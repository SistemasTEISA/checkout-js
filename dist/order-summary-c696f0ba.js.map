{"version":3,"file":"order-summary-c696f0ba.js","mappings":"gNAoBA,QAd8E,SAAC,G,IAAEA,EAAQ,WAC7EC,GAAiB,SAAiB,aAE1C,OACI,0BAAQC,UAAU,eACd,sBAAIA,UAAW,IAAW,aAAc,qCACpC,CAAE,aAAcD,KAChB,gBAACE,EAAA,EAAgB,CAACC,GAAG,uBAExBJ,EAGb,E,oEC0EA,QA9DwF,SAAC,GACrF,IAAAK,EAAa,gBACbC,EAAK,QACLC,EAAa,gBACbC,EAAe,kBACfC,EAAU,aACVC,EAAmB,sBACnBC,EAAS,YACTC,EAAK,QACFC,GAA0B,cATwD,oHAW/EC,GAAsB,IAAAC,UAAQ,WAAM,SAAAC,EAAA,GAAmBL,EAAnB,GAA+B,CAACA,IACpEM,EAAsBZ,GAAiBC,GAASA,EAAMY,OAAS,EAE7DjB,GAAiB,SAAiB,aAE1C,OACI,2BAASC,UAAU,sCAAqC,YAAW,QAC/D,gBAAC,EAAkB,KAAEO,GAErB,gBAACU,EAAA,EAAmB,KAChB,gBAACC,EAAA,EAAiB,CAACC,uBAAqB,EAACC,MAAOR,EAAqBb,aAAcA,KAGvF,gBAACsB,EAAA,EAAS,CAACC,OAAM,2BAEjB,gBAACL,EAAA,EAAmB,KAChB,gBAACM,EAAA,GAAqB,eAACpB,cAAeA,EAAeC,MAAOA,GAAWO,IACtEH,GAGL,gBAACS,EAAA,EAAmB,KAChB,gBAACO,EAAA,EAAiB,CACdC,YAAaf,EACbgB,oBAAqBpB,EAAgBqB,KACrCC,kBAAmBvB,EAAcsB,QAIxCZ,GAAuB,gBAACE,EAAA,EAAmB,KACxC,sBACIjB,UAAW,IAAW,uEAClB,CAAE,eAAgBD,IAAe,YAC3B,YAEV,gBAACE,EAAA,EAAgB,CACbC,GAAG,0BAGTE,GAAS,IAAIyB,KAAI,SAACC,EAAKC,GAAU,OAC/B,gBAACC,EAAA,EAAiB,CACdC,OAAQH,EAAIG,OACZC,IAAKH,EACLI,MAAOL,EAAIM,KACXC,OAAO,cALoB,KAWnD,C","sources":["webpack://checkout/./packages/core/src/app/order/OrderSummaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummary.tsx"],"sourcesContent":["import classNames from 'classnames';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nconst OrderSummaryHeader: FunctionComponent<{ children?: React.ReactNode }> = ({ children }) => {\r\n    const { newFontStyle } = useStyleContext();\r\n\r\n    return (\r\n        <header className=\"cart-header\">\r\n            <h3 className={classNames('cart-title', 'optimizedCheckout-headingSecondary',\r\n                { 'sub-header': newFontStyle })}>\r\n                <TranslatedString id=\"cart.cart_heading\" />\r\n            </h3>\r\n            {children}\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default OrderSummaryHeader;\r\n","import {\r\n    ExtensionRegion,\r\n    LineItemMap,\r\n    ShopperCurrency,\r\n    StoreCurrency,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport classNames from 'classnames';\r\nimport React, { FunctionComponent, ReactNode, useMemo } from 'react';\r\n\r\nimport { Extension } from '@bigcommerce/checkout/checkout-extension';\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport OrderSummaryHeader from './OrderSummaryHeader';\r\nimport OrderSummaryItems from './OrderSummaryItems';\r\nimport OrderSummaryPrice from './OrderSummaryPrice';\r\nimport OrderSummarySection from './OrderSummarySection';\r\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\r\nimport OrderSummaryTotal from './OrderSummaryTotal';\r\nimport removeBundledItems from './removeBundledItems';\r\n\r\nexport interface OrderSummaryProps {\r\n    lineItems: LineItemMap;\r\n    total: number;\r\n    headerLink: ReactNode;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrency;\r\n    additionalLineItems?: ReactNode;\r\n}\r\n\r\nconst OrderSummary: FunctionComponent<OrderSummaryProps & OrderSummarySubtotalsProps> = ({\r\n    isTaxIncluded,\r\n    taxes,\r\n    storeCurrency,\r\n    shopperCurrency,\r\n    headerLink,\r\n    additionalLineItems,\r\n    lineItems,\r\n    total,\r\n    ...orderSummarySubtotalsProps\r\n}) => {\r\n    const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\r\n    const displayInclusiveTax = isTaxIncluded && taxes && taxes.length > 0;\r\n\r\n    const { newFontStyle } = useStyleContext();\r\n\r\n    return (\r\n        <article className=\"cart optimizedCheckout-orderSummary\" data-test=\"cart\">\r\n            <OrderSummaryHeader>{headerLink}</OrderSummaryHeader>\r\n\r\n            <OrderSummarySection>\r\n                <OrderSummaryItems displayLineItemsCount items={nonBundledLineItems} newFontStyle={newFontStyle} />\r\n            </OrderSummarySection>\r\n\r\n            <Extension region={ExtensionRegion.SummaryLastItemAfter} />\r\n\r\n            <OrderSummarySection>\r\n                <OrderSummarySubtotals isTaxIncluded={isTaxIncluded} taxes={taxes} {...orderSummarySubtotalsProps} />\r\n                {additionalLineItems}\r\n            </OrderSummarySection>\r\n\r\n            <OrderSummarySection>\r\n                <OrderSummaryTotal\r\n                    orderAmount={total}\r\n                    shopperCurrencyCode={shopperCurrency.code}\r\n                    storeCurrencyCode={storeCurrency.code}\r\n                />\r\n            </OrderSummarySection>\r\n\r\n            {displayInclusiveTax && <OrderSummarySection>\r\n                <h5\r\n                    className={classNames('cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary',\r\n                        { 'body-regular': newFontStyle })}\r\n                    data-test=\"tax-text\"\r\n                >\r\n                    <TranslatedString\r\n                        id=\"tax.inclusive_label\"\r\n                    />\r\n                </h5>\r\n                {(taxes || []).map((tax, index) => (\r\n                    <OrderSummaryPrice\r\n                        amount={tax.amount}\r\n                        key={index}\r\n                        label={tax.name}\r\n                        testId=\"cart-taxes\"\r\n                    />\r\n                ))}\r\n            </OrderSummarySection>}\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default OrderSummary;\r\n"],"names":["children","newFontStyle","className","TranslatedString","id","isTaxIncluded","taxes","storeCurrency","shopperCurrency","headerLink","additionalLineItems","lineItems","total","orderSummarySubtotalsProps","nonBundledLineItems","useMemo","removeBundledItems","displayInclusiveTax","length","OrderSummarySection","OrderSummaryItems","displayLineItemsCount","items","Extension","region","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","shopperCurrencyCode","code","storeCurrencyCode","map","tax","index","OrderSummaryPrice","amount","key","label","name","testId"],"sourceRoot":""}