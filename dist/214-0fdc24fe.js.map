{"version":3,"file":"214-0fdc24fe.js","mappings":"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","sources":["webpack://checkout/./packages/ui/src/icon/IconClose.tsx","webpack://checkout/./packages/ui/src/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/coupon/AppliedCoupon.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/AppliedGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconRemove.tsx","webpack://checkout/./packages/core/src/app/cart/AppliedRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/AppliedRedeemables.tsx","webpack://checkout/./packages/core/src/app/cart/Redeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToRedeemableProps.ts","webpack://checkout/./packages/ui/src/button/Button.tsx","webpack://checkout/./packages/ui/src/modal/ModalHeader.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconClose: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconClose);\r\n","import classNames from 'classnames';\r\nimport { noop } from 'lodash';\r\nimport React, { FunctionComponent, KeyboardEvent, MouseEvent, ReactNode, useCallback } from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport { Omit } from 'utility-types';\r\n\r\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\r\n\r\nimport { IconClose } from '../icon';\r\n\r\nexport type ModalProps = Omit<\r\n    ReactModal.Props,\r\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\r\n> & {\r\n    children?: ReactNode;\r\n    closeButtonLabel?: string | ReactNode;\r\n    footer?: ReactNode;\r\n    header?: ReactNode;\r\n    additionalHeaderClassName?: string;\r\n    additionalBodyClassName?: string;\r\n    additionalModalClassName?: string;\r\n    shouldShowCloseButton?: boolean;\r\n};\r\n\r\nconst Modal: FunctionComponent<ModalProps> = ({\r\n    children,\r\n    closeButtonLabel = 'Close',\r\n    footer,\r\n    header,\r\n    additionalHeaderClassName,\r\n    additionalBodyClassName,\r\n    additionalModalClassName,\r\n    onRequestClose = noop,\r\n    shouldShowCloseButton = false,\r\n    ...rest\r\n}) => {\r\n    const handleClose = useCallback(\r\n        (event: MouseEvent | KeyboardEvent) => {\r\n            onRequestClose(event);\r\n        },\r\n        [onRequestClose],\r\n    );\r\n\r\n    return (\r\n        <ReactModal\r\n            {...rest}\r\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\r\n            bodyOpenClassName=\"has-activeModal\"\r\n            className={{\r\n                base: classNames(\r\n                    'modal optimizedCheckout-contentPrimary',\r\n                    additionalModalClassName,\r\n                ),\r\n                afterOpen: 'modal--afterOpen',\r\n                beforeClose: 'modal--beforeClose',\r\n            }}\r\n            closeTimeoutMS={200}\r\n            onRequestClose={onRequestClose}\r\n            overlayClassName={{\r\n                base: 'modalOverlay',\r\n                afterOpen: 'modalOverlay--afterOpen',\r\n                beforeClose: 'modalOverlay--beforeClose',\r\n            }}\r\n            shouldCloseOnEsc={true}\r\n            shouldCloseOnOverlayClick={false}\r\n        >\r\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\r\n                {header}\r\n\r\n                {shouldShowCloseButton && (\r\n                    <a\r\n                        className=\"modal-close\"\r\n                        data-test=\"modal-close-button\"\r\n                        href=\"#\"\r\n                        onClick={preventDefault(handleClose)}\r\n                    >\r\n                        {Boolean(closeButtonLabel) && (\r\n                            <span className=\"is-srOnly\">{closeButtonLabel}</span>\r\n                        )}\r\n\r\n                        <IconClose />\r\n                    </a>\r\n                )}\r\n            </div>\r\n\r\n            <div\r\n                className={classNames('modal-body', additionalBodyClassName)}\r\n                data-test=\"modal-body\"\r\n            >\r\n                {children}\r\n            </div>\r\n\r\n            {Boolean(footer) && (\r\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\r\n                    {footer}\r\n                </div>\r\n            )}\r\n        </ReactModal>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import { Coupon } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nexport interface AppliedCouponProps {\r\n    coupon: Coupon;\r\n}\r\n\r\nconst AppliedCoupon: FunctionComponent<AppliedCouponProps> = ({ coupon }) => (\r\n    <div className=\"redeemable-column redeemable-info\" data-test=\"redeemable-item--coupon\">\r\n        <span className=\"redeemable-info-header\">\r\n            <span className=\"redeemable-info-header--highlight\" data-test=\"coupon-amount\">\r\n                {coupon.displayName}\r\n            </span>{' '}\r\n            <TranslatedString id=\"redeemable.coupon_text\" />\r\n        </span>\r\n\r\n        <span className=\"redeemable-info-subHeader\" data-test=\"coupon-code\">\r\n            {coupon.code}\r\n        </span>\r\n    </div>\r\n);\r\n\r\nexport default memo(AppliedCoupon);\r\n","import { GiftCertificate } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { ShopperCurrency } from '../currency';\r\n\r\nexport interface AppliedGiftCertificateProps {\r\n    giftCertificate: GiftCertificate;\r\n}\r\n\r\nconst AppliedGiftCertificate: FunctionComponent<AppliedGiftCertificateProps> = ({\r\n    giftCertificate,\r\n}) => (\r\n    <div className=\"redeemable-column redeemable-info\" data-test=\"redeemable-item--giftCertificate\">\r\n        <span className=\"redeemable-info-header\">\r\n            <span className=\"redeemable-info-header--highlight\" data-test=\"giftCertificate-amount\">\r\n                <ShopperCurrency amount={giftCertificate.used} />\r\n            </span>{' '}\r\n            <TranslatedString id=\"redeemable.gift_certificate_text\" />\r\n        </span>\r\n\r\n        <span className=\"redeemable-info-subHeader\">\r\n            {giftCertificate.remaining > 0 && (\r\n                <span className=\"redeemable-info-subHeader--remaining\">\r\n                    <TranslatedString id=\"redeemable.gift_certificate_remaining_text\" />{' '}\r\n                    <span data-test=\"giftCertificate-remaining\">\r\n                        <ShopperCurrency amount={giftCertificate.remaining} />\r\n                    </span>\r\n                </span>\r\n            )}\r\n\r\n            <span data-test=\"giftCertificate-code\">{giftCertificate.code}</span>\r\n        </span>\r\n    </div>\r\n);\r\n\r\nexport default memo(AppliedGiftCertificate);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconRemove: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconRemove);\r\n","import classNames from 'classnames';\r\nimport React, {FunctionComponent, ReactNode} from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { IconRemove } from '../ui/icon';\r\n\r\nimport './AppliedRedeemable.scss';\r\n\r\nexport interface AppliedRedeemableProps {\r\n    children: ReactNode;\r\n    isRemoving: boolean;\r\n    onRemove(): void;\r\n}\r\n\r\nconst AppliedRedeemable: FunctionComponent<AppliedRedeemableProps> = ({\r\n    children,\r\n    isRemoving,\r\n    onRemove,\r\n}) => (\r\n    <div className=\"form-checklist-header\">\r\n        <div className=\"form-checklist-checkbox optimizedCheckout-form-checklist-checkbox\">\r\n            <span className=\"is-srOnly\">\r\n                <TranslatedString id=\"redeemable.applied_text\" />\r\n            </span>\r\n        </div>\r\n\r\n        <div className=\"form-label form-label-redeemable\">\r\n            <div className=\"redeemable\">\r\n                {children}\r\n                <div className=\"redeemable-column redeemable-actions\">\r\n                    <button\r\n                        className={classNames('redeemable-remove', { 'is-loading': isRemoving })}\r\n                        data-test=\"redeemable-remove\"\r\n                        disabled={isRemoving}\r\n                        onClick={onRemove}\r\n                        type=\"button\"\r\n                    >\r\n                        <IconRemove />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default AppliedRedeemable;\r\n","import { Coupon, GiftCertificate } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo, useCallback } from 'react';\r\n\r\nimport { AppliedCoupon } from '../coupon';\r\nimport { AppliedGiftCertificate } from '../giftCertificate';\r\n\r\nimport AppliedRedeemable from './AppliedRedeemable';\r\n\r\ninterface AppliedCouponProps {\r\n    coupon: Coupon;\r\n    isRemoving?: boolean;\r\n    onRemoved(code: string): void;\r\n}\r\n\r\nconst AppliedCouponChecklistItem: FunctionComponent<AppliedCouponProps> = ({\r\n    coupon,\r\n    onRemoved,\r\n    isRemoving = false,\r\n}) => {\r\n    const handleRemove = useCallback(() => {\r\n        onRemoved(coupon.code);\r\n    }, [coupon, onRemoved]);\r\n\r\n    return (\r\n        <li className=\"form-checklist-item optimizedCheckout-form-checklist-item\">\r\n            <AppliedRedeemable isRemoving={isRemoving} onRemove={handleRemove}>\r\n                <AppliedCoupon coupon={coupon} />\r\n            </AppliedRedeemable>\r\n        </li>\r\n    );\r\n};\r\n\r\ninterface AppliedGiftCertificateProps {\r\n    giftCertificate: GiftCertificate;\r\n    isRemoving?: boolean;\r\n    onRemoved(code: string): void;\r\n}\r\n\r\nconst AppliedGiftCertificateChecklistItem: FunctionComponent<AppliedGiftCertificateProps> = ({\r\n    giftCertificate,\r\n    onRemoved,\r\n    isRemoving = false,\r\n}) => {\r\n    const handleRemove = useCallback(() => {\r\n        onRemoved(giftCertificate.code);\r\n    }, [giftCertificate, onRemoved]);\r\n\r\n    return (\r\n        <li className=\"form-checklist-item optimizedCheckout-form-checklist-item\">\r\n            <AppliedRedeemable isRemoving={isRemoving} onRemove={handleRemove}>\r\n                <AppliedGiftCertificate giftCertificate={giftCertificate} />\r\n            </AppliedRedeemable>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport interface AppliedRedeemablesProps {\r\n    coupons?: Coupon[];\r\n    giftCertificates?: GiftCertificate[];\r\n    isRemovingGiftCertificate?: boolean;\r\n    isRemovingCoupon?: boolean;\r\n    onRemovedCoupon(code: string): void;\r\n    onRemovedGiftCertificate(code: string): void;\r\n}\r\n\r\nconst AppliedRedeemables: FunctionComponent<AppliedRedeemablesProps> = ({\r\n    coupons = [],\r\n    giftCertificates = [],\r\n    isRemovingCoupon = false,\r\n    isRemovingGiftCertificate = false,\r\n    onRemovedCoupon,\r\n    onRemovedGiftCertificate,\r\n}) => {\r\n    if (!coupons.length && !giftCertificates.length) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <ul\r\n            className=\"form-checklist optimizedCheckout-form-checklist\"\r\n            data-test=\"redeemables-list\"\r\n        >\r\n            {coupons.map((coupon) => (\r\n                <AppliedCouponChecklistItem\r\n                    coupon={coupon}\r\n                    isRemoving={isRemovingCoupon}\r\n                    key={coupon.code}\r\n                    onRemoved={onRemovedCoupon}\r\n                />\r\n            ))}\r\n\r\n            {giftCertificates.map((giftCertificate) => (\r\n                <AppliedGiftCertificateChecklistItem\r\n                    giftCertificate={giftCertificate}\r\n                    isRemoving={isRemovingGiftCertificate}\r\n                    key={giftCertificate.code}\r\n                    onRemoved={onRemovedGiftCertificate}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default memo(AppliedRedeemables);\r\n","import { CheckoutSelectors, RequestError } from '@bigcommerce/checkout-sdk';\r\nimport { memoizeOne } from '@bigcommerce/memoize';\r\nimport classNames from 'classnames';\r\nimport { FieldProps, FormikProps, withFormik } from 'formik';\r\nimport { noop } from 'lodash';\r\nimport React, {FunctionComponent, KeyboardEvent, memo, ReactNode, useCallback} from 'react';\r\nimport { object, string } from 'yup';\r\n\r\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\r\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\r\nimport { useCheckout , useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\r\nimport { FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\r\n\r\nimport { Alert, AlertType } from '../ui/alert';\r\nimport { Button, ButtonVariant } from '../ui/button';\r\nimport { FormField, Label, TextInput } from '../ui/form';\r\nimport { Toggle } from '../ui/toggle';\r\n\r\nimport AppliedRedeemables, { AppliedRedeemablesProps } from './AppliedRedeemables';\r\n\r\nexport interface RedeemableFormValues {\r\n    redeemableCode: string;\r\n}\r\n\r\nexport type ReedemableChildrenProps = Pick<\r\n    RedeemableProps,\r\n    | 'onRemovedCoupon'\r\n    | 'onRemovedGiftCertificate'\r\n    | 'isRemovingGiftCertificate'\r\n    | 'isRemovingCoupon'\r\n    | 'coupons'\r\n    | 'giftCertificates'\r\n>;\r\n\r\nexport type RedeemableProps = {\r\n    appliedRedeemableError?: RequestError;\r\n    isApplyingRedeemable?: boolean;\r\n    isRemovingRedeemable?: boolean;\r\n    removedRedeemableError?: RequestError;\r\n    showAppliedRedeemables?: boolean;\r\n    shouldCollapseCouponCode?: boolean;\r\n    applyCoupon(code: string): Promise<CheckoutSelectors>;\r\n    applyGiftCertificate(code: string): Promise<CheckoutSelectors>;\r\n    clearError(error: Error): void;\r\n} & AppliedRedeemablesProps;\r\n\r\nconst Redeemable: FunctionComponent<\r\n    RedeemableProps & WithLanguageProps & FormikProps<RedeemableFormValues>\r\n    > = ({ shouldCollapseCouponCode, showAppliedRedeemables, ...formProps }) => {\r\n        const { newFontStyle } = useStyleContext();\r\n\r\n        return (\r\n            <Toggle openByDefault={!shouldCollapseCouponCode}>\r\n                {({ toggle, isOpen }): ReactNode => (\r\n                    <>\r\n                        {shouldCollapseCouponCode && (\r\n                            <a\r\n                                aria-controls=\"redeemable-collapsable\"\r\n                                aria-expanded={isOpen}\r\n                                className={classNames('redeemable-label', { 'body-cta': newFontStyle })}\r\n                                data-test=\"redeemable-label\"\r\n                                href=\"#\"\r\n                                onClick={preventDefault(toggle)}\r\n                            >\r\n                                <TranslatedString id=\"redeemable.toggle_action\" />\r\n                            </a>\r\n                        )}\r\n                        {!shouldCollapseCouponCode && (\r\n                            <div className={classNames('redeemable-label', { 'body-cta': newFontStyle })}>\r\n                                <TranslatedString id=\"redeemable.toggle_action\" />\r\n                            </div>\r\n                        )}\r\n                        {(isOpen || !shouldCollapseCouponCode) && (\r\n                            <div data-test=\"redeemable-collapsable\" id=\"redeemable-collapsable\">\r\n                                <RedeemableForm {...formProps} />\r\n                                {showAppliedRedeemables && <AppliedRedeemables {...formProps} />}\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </Toggle>\r\n        );\r\n    }\r\n\r\nconst RedeemableForm: FunctionComponent<\r\n    Partial<RedeemableProps> & FormikProps<RedeemableFormValues> & WithLanguageProps\r\n> = ({ appliedRedeemableError, isApplyingRedeemable, clearError = noop, submitForm, language }) => {\r\n    const {\r\n        checkoutState: {\r\n            statuses: { isSubmittingOrder }\r\n        }\r\n    } = useCheckout();\r\n    const { newFontStyle } = useStyleContext();\r\n\r\n    const handleSubmitForm = (setSubmitted: FormContextType['setSubmitted']) => {\r\n        if (isSubmittingOrder()) {\r\n            return;\r\n        }\r\n\r\n        setSubmitted(true);\r\n        submitForm();\r\n    }\r\n\r\n    const handleKeyDown = useCallback(\r\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => (event: KeyboardEvent) => {\r\n            if (appliedRedeemableError) {\r\n                clearError(appliedRedeemableError);\r\n            }\r\n\r\n            // note: to prevent submitting main form, we manually intercept\r\n            // the enter key event and submit the \"subform\".\r\n            if (event.keyCode === 13 || event.key === 'Enter') {\r\n                handleSubmitForm(setSubmitted);\r\n                event.preventDefault();\r\n            }\r\n        }),\r\n        [appliedRedeemableError, clearError, submitForm],\r\n    );\r\n\r\n    const handleSubmit = useCallback(\r\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => () => {\r\n            handleSubmitForm(setSubmitted);\r\n        }),\r\n        [],\r\n    );\r\n\r\n    const renderLabel = useCallback(\r\n        (name: string) => (\r\n            <Label hidden htmlFor={name}>\r\n                <TranslatedString id=\"redeemable.code_label\" />\r\n            </Label>\r\n        ),\r\n        [],\r\n    );\r\n\r\n    const renderErrorMessage = useCallback((errorCode: string, errorMessage?: string) => {\r\n        switch (errorCode) {\r\n            case 'min_purchase':\r\n                return <TranslatedString id=\"redeemable.coupon_min_order_total\" />;\r\n\r\n            case 'not_applicable':\r\n                return <TranslatedString id=\"redeemable.coupon_location_error\" />;\r\n\r\n            default:\r\n                return errorMessage || <TranslatedString id=\"redeemable.code_invalid_error\" />;\r\n        }\r\n    }, []);\r\n\r\n    const renderInput = useCallback(\r\n        (setSubmitted: FormContextType['setSubmitted']) =>\r\n            ({ field }: FieldProps) =>\r\n                (\r\n                    <>\r\n                        {appliedRedeemableError &&\r\n                            appliedRedeemableError.errors &&\r\n                            appliedRedeemableError.errors[0] && (\r\n                                <Alert type={AlertType.Error}>\r\n                                    {renderErrorMessage(appliedRedeemableError.errors[0].code, appliedRedeemableError.errors[0].message)}\r\n                                </Alert>\r\n                            )}\r\n\r\n                        <div className=\"form-prefixPostfix\">\r\n                            <TextInput\r\n                                {...field}\r\n                                aria-label={language.translate('redeemable.code_label')}\r\n                                className=\"form-input optimizedCheckout-form-input\"\r\n                                newFontStyle={newFontStyle}\r\n                                onKeyDown={handleKeyDown(setSubmitted)}\r\n                                testId=\"redeemableEntry-input\"\r\n                            />\r\n\r\n                            <Button\r\n                                className={classNames('form-prefixPostfix-button--postfix', {\r\n                                    'body-bold': newFontStyle,\r\n                                })}\r\n                                disabled={isSubmittingOrder()}\r\n                                id=\"applyRedeemableButton\"\r\n                                isLoading={isApplyingRedeemable}\r\n                                onClick={handleSubmit(setSubmitted)}\r\n                                testId=\"redeemableEntry-submit\"\r\n                                variant={ButtonVariant.Secondary}\r\n                            >\r\n                                <TranslatedString id=\"redeemable.apply_action\" />\r\n                            </Button>\r\n                        </div>\r\n                    </>\r\n                ),\r\n        [\r\n            appliedRedeemableError,\r\n            handleKeyDown,\r\n            handleSubmit,\r\n            isApplyingRedeemable,\r\n            language,\r\n            isSubmittingOrder,\r\n            renderErrorMessage,\r\n        ],\r\n    );\r\n\r\n    const renderContent = useCallback(\r\n        memoizeOne(({ setSubmitted }: FormContextType) => (\r\n            <FormField\r\n                input={renderInput(setSubmitted)}\r\n                label={renderLabel}\r\n                name=\"redeemableCode\"\r\n            />\r\n        )),\r\n        [renderLabel, renderInput],\r\n    );\r\n\r\n    return (\r\n        <fieldset className=\"form-fieldset redeemable-entry\">\r\n            <FormProvider>{renderContent}</FormProvider>\r\n        </fieldset>\r\n    );\r\n};\r\n\r\nexport default withLanguage(\r\n    withFormik<RedeemableProps & WithLanguageProps, RedeemableFormValues>({\r\n        mapPropsToValues() {\r\n            return {\r\n                redeemableCode: '',\r\n            };\r\n        },\r\n\r\n        async handleSubmit(\r\n            { redeemableCode },\r\n            { props: { applyCoupon, applyGiftCertificate, clearError } },\r\n        ) {\r\n            const code = redeemableCode.trim();\r\n\r\n            try {\r\n                await applyGiftCertificate(code);\r\n            } catch (error) {\r\n                if (error instanceof Error) {\r\n                    clearError(error);\r\n                }\r\n\r\n                applyCoupon(code);\r\n            }\r\n        },\r\n\r\n        validationSchema({ language }: RedeemableProps & WithLanguageProps) {\r\n            return object({\r\n                redeemableCode: string().required(\r\n                    language.translate('redeemable.code_required_error'),\r\n                ),\r\n            });\r\n        },\r\n    })(memo(Redeemable)),\r\n);\r\n","import { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { EMPTY_ARRAY } from '../common/utility';\r\n\r\nimport { RedeemableProps } from './Redeemable';\r\n\r\nexport default function mapToRedeemableProps(\r\n    context: CheckoutContextProps,\r\n): RedeemableProps | null {\r\n    const {\r\n        checkoutService,\r\n        checkoutState: {\r\n            data: { getConfig, getCoupons, getGiftCertificates },\r\n            statuses: {\r\n                isApplyingCoupon,\r\n                isApplyingGiftCertificate,\r\n                isRemovingCoupon,\r\n                isRemovingGiftCertificate,\r\n            },\r\n            errors: {\r\n                getApplyCouponError,\r\n                getApplyGiftCertificateError,\r\n                getRemoveCouponError,\r\n                getRemoveGiftCertificateError,\r\n            },\r\n        },\r\n    } = context;\r\n\r\n    const config = getConfig();\r\n\r\n    if (!config) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        appliedRedeemableError: getApplyCouponError() || getApplyGiftCertificateError(),\r\n        applyCoupon: checkoutService.applyCoupon,\r\n        applyGiftCertificate: checkoutService.applyGiftCertificate,\r\n        clearError: checkoutService.clearError,\r\n        coupons: getCoupons() || EMPTY_ARRAY,\r\n        giftCertificates: getGiftCertificates() || EMPTY_ARRAY,\r\n        isApplyingRedeemable: isApplyingCoupon() || isApplyingGiftCertificate(),\r\n        isRemovingCoupon: isRemovingCoupon(),\r\n        isRemovingGiftCertificate: isRemovingGiftCertificate(),\r\n        onRemovedCoupon: checkoutService.removeCoupon,\r\n        onRemovedGiftCertificate: checkoutService.removeGiftCertificate,\r\n        removedRedeemableError: getRemoveCouponError() || getRemoveGiftCertificateError(),\r\n        shouldCollapseCouponCode: config.checkoutSettings.isCouponCodeCollapsed,\r\n    };\r\n}\r\n","import classNames from 'classnames';\r\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\r\n\r\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n    isFullWidth?: boolean;\r\n    isLoading?: boolean;\r\n    size?: ButtonSize;\r\n    testId?: string;\r\n    variant?: ButtonVariant;\r\n}\r\n\r\nexport enum ButtonVariant {\r\n    Primary = 'primary',\r\n    Secondary = 'secondary',\r\n    Action = 'action',\r\n}\r\n\r\nexport enum ButtonSize {\r\n    Small = 'small',\r\n    Tiny = 'tiny',\r\n    Large = 'large',\r\n}\r\n\r\nfunction getClassName(\r\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\r\n) {\r\n    const { className, isFullWidth, isLoading, size, variant } = props;\r\n\r\n    return classNames(\r\n        'button',\r\n        className,\r\n        { 'button--primary': variant === ButtonVariant.Primary },\r\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\r\n        { 'button--action': variant === ButtonVariant.Action },\r\n        { 'button--small': size === ButtonSize.Small },\r\n        { 'button--tiny': size === ButtonSize.Tiny },\r\n        { 'button--large': size === ButtonSize.Large },\r\n        { 'button--slab': isFullWidth },\r\n        {\r\n            'optimizedCheckout-buttonPrimary':\r\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\r\n        },\r\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\r\n        { 'is-loading': isLoading },\r\n    );\r\n}\r\n\r\nconst Button: FunctionComponent<ButtonProps> = ({\r\n    children,\r\n    className,\r\n    disabled,\r\n    isFullWidth,\r\n    isLoading,\r\n    size,\r\n    testId,\r\n    type,\r\n    variant,\r\n    ...rest\r\n}) => (\r\n    <button\r\n        {...rest}\r\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\r\n        data-test={testId}\r\n        disabled={disabled || isLoading}\r\n        type={type || 'button'}\r\n    >\r\n        {children}\r\n    </button>\r\n);\r\n\r\nexport default Button;\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\ninterface ModalHeaderProps {\r\n    children: React.ReactNode;\r\n    additionalClassName?: string;\r\n}\r\n\r\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\r\n    <h2\r\n        className={classNames(\r\n            'modal-header-title optimizedCheckout-headingSecondary',\r\n            additionalClassName,\r\n        )}\r\n        data-test=\"modal-heading\"\r\n    >\r\n        {children}\r\n    </h2>\r\n);\r\n\r\nexport default ModalHeader;\r\n"],"names":["height","viewBox","width","xmlns","d","children","closeButtonLabel","footer","header","additionalHeaderClassName","additionalBodyClassName","additionalModalClassName","onRequestClose","noop","shouldShowCloseButton","rest","handleClose","useCallback","event","ariaHideApp","bodyOpenClassName","className","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","href","onClick","preventDefault","Boolean","memo","coupon","displayName","TranslatedString","id","code","giftCertificate","ShopperCurrency","amount","used","remaining","isRemoving","onRemove","disabled","type","AppliedCouponChecklistItem","onRemoved","handleRemove","AppliedGiftCertificateChecklistItem","coupons","giftCertificates","isRemovingCoupon","isRemovingGiftCertificate","onRemovedCoupon","onRemovedGiftCertificate","length","map","key","RedeemableForm","appliedRedeemableError","isApplyingRedeemable","clearError","submitForm","language","isSubmittingOrder","newFontStyle","handleSubmitForm","setSubmitted","handleKeyDown","memoizeOne","keyCode","handleSubmit","renderLabel","name","Label","hidden","htmlFor","renderErrorMessage","errorCode","errorMessage","renderInput","field","errors","Alert","A","Error","message","TextInput","translate","onKeyDown","testId","Button","isLoading","variant","Secondary","renderContent","FormField","input","label","withLanguage","mapPropsToValues","redeemableCode","props","applyCoupon","applyGiftCertificate","trim","validationSchema","required","shouldCollapseCouponCode","showAppliedRedeemables","formProps","Toggle","openByDefault","toggle","isOpen","mapToRedeemableProps","context","checkoutService","data","getConfig","getCoupons","getGiftCertificates","statuses","isApplyingCoupon","isApplyingGiftCertificate","getApplyCouponError","getApplyGiftCertificateError","getRemoveCouponError","getRemoveGiftCertificateError","config","removeCoupon","removeGiftCertificate","removedRedeemableError","checkoutSettings","isCouponCodeCollapsed","ButtonVariant","ButtonSize","getClassName","isFullWidth","size","Primary","Action","Small","Tiny","Large","additionalClassName"],"sourceRoot":""}