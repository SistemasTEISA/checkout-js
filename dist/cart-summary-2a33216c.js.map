{"version":3,"file":"cart-summary-2a33216c.js","mappings":"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","sources":["webpack://checkout/./packages/ui/src/modal/ConfirmationModal.tsx","webpack://checkout/./packages/core/src/app/cart/mapToCartSummaryProps.ts","webpack://checkout/./packages/core/src/app/cart/EditLink.tsx","webpack://checkout/./packages/core/src/app/cart/withRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/cart/CartSummary.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummary.tsx"],"sourcesContent":["import { noop } from 'lodash';\r\nimport React, { ReactNode } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { Button, ButtonSize, ButtonVariant } from '../button';\r\n\r\nimport Modal from './Modal';\r\nimport ModalHeader from './ModalHeader';\r\n\r\ninterface ConfirmationModalProps {\r\n    headerId: string;\r\n    messageId: string;\r\n    isModalOpen: boolean;\r\n    onRequestClose?: () => void;\r\n    action: () => void;\r\n    actionButtonLabel?: ReactNode;\r\n    shouldShowCloseButton?: boolean;\r\n}\r\n\r\nconst ConfirmationModal = ({\r\n    headerId,\r\n    messageId,\r\n    isModalOpen,\r\n    action,\r\n    actionButtonLabel,\r\n    onRequestClose = noop,\r\n    shouldShowCloseButton = true,\r\n}: ConfirmationModalProps) => {\r\n    return (\r\n        <Modal\r\n            additionalModalClassName=\"modal--confirm\"\r\n            footer={\r\n                <Button onClick={action} size={ButtonSize.Small} variant={ButtonVariant.Primary}>\r\n                    {actionButtonLabel ?? <TranslatedString id=\"common.confirm_action\" />}\r\n                </Button>\r\n            }\r\n            header={\r\n                <ModalHeader>\r\n                    <span aria-live=\"assertive\" role=\"alert\">\r\n                        <TranslatedString id={headerId} />\r\n                    </span>\r\n                </ModalHeader>\r\n            }\r\n            isOpen={isModalOpen}\r\n            onRequestClose={onRequestClose}\r\n            shouldShowCloseButton={shouldShowCloseButton}\r\n        >\r\n            <p aria-live=\"assertive\" role=\"alert\">\r\n                <TranslatedString id={messageId} />\r\n            </p>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\nimport { isBuyNowCart } from '@bigcommerce/checkout/utility';\r\n\r\nimport { isExperimentEnabled } from '../common/utility';\r\n\r\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\r\nimport mapToRedeemableProps from './mapToRedeemableProps';\r\n\r\nexport default function mapToCartSummaryProps(\r\n    context: CheckoutContextProps,\r\n): WithCheckoutCartSummaryProps | null {\r\n    const {\r\n        checkoutState: {\r\n            data: { getConfig, getCustomer, getCheckout },\r\n        },\r\n    } = context;\r\n\r\n    const checkout = getCheckout();\r\n    const config = getConfig();\r\n    const customer = getCustomer();\r\n    const redeemableProps = mapToRedeemableProps(context);\r\n\r\n    if (!checkout || !config || !redeemableProps || !customer) {\r\n        return null;\r\n    }\r\n\r\n    const { isStoreCreditApplied, grandTotal } = checkout;\r\n    const { storeCredit } = customer;\r\n\r\n    const isShippingDiscountDisplayEnabled = isExperimentEnabled(\r\n        config.checkoutSettings,\r\n        'PROJECT-6643.enable_shipping_discounts_in_orders',\r\n    );\r\n\r\n    return {\r\n        isBuyNowCart: isBuyNowCart(checkout.cart),\r\n        isShippingDiscountDisplayEnabled,\r\n        checkout,\r\n        shopperCurrency: config.shopperCurrency,\r\n        cartUrl: config.links.cartLink,\r\n        storeCurrency: config.currency,\r\n        storeCreditAmount: isStoreCreditApplied ? Math.min(grandTotal, storeCredit) : undefined,\r\n        ...redeemableProps,\r\n    };\r\n}\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent, memo, useState } from 'react';\r\n\r\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\r\nimport { ConfirmationModal } from '@bigcommerce/checkout/ui';\r\n\r\nexport interface EditLinkProps {\r\n    className?: string;\r\n    isMultiShippingMode: boolean;\r\n    url: string;\r\n}\r\n\r\nconst EditLink: FunctionComponent<EditLinkProps> = ({ className, url, isMultiShippingMode }) => {\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    const { newFontStyle } = useStyleContext();\r\n\r\n    const gotoCartPage = () => {\r\n        window.location.assign(url);\r\n    };\r\n\r\n    if (isMultiShippingMode) {\r\n        return (\r\n            <>\r\n                <ConfirmationModal\r\n                    action={gotoCartPage}\r\n                    headerId=\"cart.edit_cart_action\"\r\n                    isModalOpen={isModalOpen}\r\n                    messageId=\"cart.edit_multi_shipping_cart_message\"\r\n                    onRequestClose={() => setIsModalOpen(false)}\r\n                />\r\n                <a\r\n                    className={classNames((className || 'cart-header-link'),\r\n                        { 'body-cta': newFontStyle })}\r\n                    data-test=\"cart-edit-link\"\r\n                    href=\"#\"\r\n                    id=\"cart-edit-link\"\r\n                    onClick={preventDefault(() => setIsModalOpen(true))}\r\n                >\r\n                    <TranslatedString id=\"cart.edit_cart_action\" />\r\n                </a>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <a\r\n            className={classNames((className || 'cart-header-link'),\r\n                { 'body-cta': newFontStyle })}\r\n            data-test=\"cart-edit-link\"\r\n            href={url}\r\n            id=\"cart-edit-link\"\r\n            target=\"_top\"\r\n        >\r\n            <TranslatedString id=\"cart.edit_cart_action\" />\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default memo(EditLink);\r\n","import React, { ComponentType, FunctionComponent } from 'react';\r\n\r\nimport { OrderSummaryProps, OrderSummarySubtotalsProps } from '../order';\r\n\r\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\r\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\r\nimport Redeemable from './Redeemable';\r\n\r\nexport default function withRedeemable(\r\n    OriginalComponent: ComponentType<OrderSummaryProps & OrderSummarySubtotalsProps>,\r\n): FunctionComponent<WithCheckoutCartSummaryProps & { headerLink?: any }> {\r\n    return (props) => {\r\n        const {\r\n            checkout,\r\n            storeCurrency,\r\n            shopperCurrency,\r\n            headerLink,\r\n            onRemovedCoupon,\r\n            onRemovedGiftCertificate,\r\n            storeCreditAmount,\r\n            isShippingDiscountDisplayEnabled,\r\n            ...redeemableProps\r\n        } = props;\r\n\r\n        return (\r\n            <OriginalComponent\r\n                {...mapToOrderSummarySubtotalsProps(checkout, isShippingDiscountDisplayEnabled)}\r\n                additionalLineItems={\r\n                    <Redeemable\r\n                        {...{\r\n                            ...redeemableProps,\r\n                            onRemovedCoupon,\r\n                            onRemovedGiftCertificate,\r\n                        }}\r\n                    />\r\n                }\r\n                headerLink={headerLink}\r\n                lineItems={checkout.cart.lineItems}\r\n                onRemovedCoupon={onRemovedCoupon}\r\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\r\n                shopperCurrency={shopperCurrency}\r\n                storeCreditAmount={storeCreditAmount}\r\n                storeCurrency={storeCurrency}\r\n                total={checkout.outstandingBalance}\r\n            />\r\n        );\r\n    };\r\n}\r\n","import { Checkout } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { OrderSummarySubtotalsProps } from '../order';\r\nimport { getShippingCostAfterAutomaticDiscount, hasSelectedShippingOptions } from '../shipping';\r\n\r\nexport default function mapToOrderSummarySubtotalsProps({\r\n    subtotal,\r\n    cart: { discountAmount, isTaxIncluded },\r\n    giftCertificates,\r\n    consignments,\r\n    handlingCostTotal,\r\n    shippingCostBeforeDiscount,\r\n    giftWrappingCostTotal,\r\n    coupons,\r\n    taxes,\r\n    fees,\r\n}: Checkout,\r\nisShippingDiscountDisplayEnabled: boolean,\r\n): OrderSummarySubtotalsProps {\r\n    const allConsignmentsHaveSelectedShippingOption = hasSelectedShippingOptions(consignments);\r\n\r\n    const shippingAmount = allConsignmentsHaveSelectedShippingOption\r\n        ? isShippingDiscountDisplayEnabled\r\n            ? getShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount, consignments)\r\n            : shippingCostBeforeDiscount\r\n        : undefined;\r\n\r\n    return {\r\n        subtotalAmount: subtotal,\r\n        discountAmount,\r\n        giftCertificates,\r\n        giftWrappingAmount: giftWrappingCostTotal,\r\n        shippingAmount,\r\n        shippingAmountBeforeDiscount: isShippingDiscountDisplayEnabled && allConsignmentsHaveSelectedShippingOption\r\n            ? shippingCostBeforeDiscount\r\n            : undefined,\r\n        handlingAmount: handlingCostTotal,\r\n        coupons,\r\n        taxes,\r\n        fees,\r\n        isTaxIncluded,\r\n    };\r\n}\r\n","import { Checkout, ShopperCurrency, StoreCurrency } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { withCheckout } from '../checkout';\r\nimport OrderSummary from '../order/OrderSummary';\r\n\r\nimport EditLink from './EditLink';\r\nimport mapToCartSummaryProps from './mapToCartSummaryProps';\r\nimport { RedeemableProps } from './Redeemable';\r\nimport withRedeemable from './withRedeemable';\r\n\r\nexport type WithCheckoutCartSummaryProps = {\r\n    checkout: Checkout;\r\n    cartUrl: string;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrency;\r\n    storeCreditAmount?: number;\r\n    isBuyNowCart: boolean;\r\n    isShippingDiscountDisplayEnabled: boolean;\r\n} & RedeemableProps;\r\n\r\nconst CartSummary: FunctionComponent<\r\n    WithCheckoutCartSummaryProps & {\r\n        isMultiShippingMode: boolean;\r\n    }\r\n    > = ({ cartUrl, isMultiShippingMode, isBuyNowCart, ...props }) => {\r\n    const headerLink = isBuyNowCart ? null : (\r\n        <EditLink\r\n            isMultiShippingMode={isMultiShippingMode}\r\n            url={cartUrl}\r\n        />\r\n    );\r\n\r\n    return withRedeemable(OrderSummary)({\r\n        ...props,\r\n        cartUrl,\r\n        isBuyNowCart,\r\n        headerLink,\r\n    });\r\n};\r\n\r\nexport default withCheckout(mapToCartSummaryProps)(CartSummary);\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nconst OrderSummaryHeader: FunctionComponent<{ children?: React.ReactNode }> = ({ children }) => {\r\n    const { newFontStyle } = useStyleContext();\r\n\r\n    return (\r\n        <header className=\"cart-header\">\r\n            <h3 className={classNames('cart-title', 'optimizedCheckout-headingSecondary',\r\n                { 'sub-header': newFontStyle })}>\r\n                <TranslatedString id=\"cart.cart_heading\" />\r\n            </h3>\r\n            {children}\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default OrderSummaryHeader;\r\n","import {\r\n    ExtensionRegion,\r\n    LineItemMap,\r\n    ShopperCurrency,\r\n    StoreCurrency,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport classNames from 'classnames';\r\nimport React, { FunctionComponent, ReactNode, useMemo } from 'react';\r\n\r\nimport { Extension } from '@bigcommerce/checkout/checkout-extension';\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport OrderSummaryHeader from './OrderSummaryHeader';\r\nimport OrderSummaryItems from './OrderSummaryItems';\r\nimport OrderSummaryPrice from './OrderSummaryPrice';\r\nimport OrderSummarySection from './OrderSummarySection';\r\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\r\nimport OrderSummaryTotal from './OrderSummaryTotal';\r\nimport removeBundledItems from './removeBundledItems';\r\n\r\nexport interface OrderSummaryProps {\r\n    lineItems: LineItemMap;\r\n    total: number;\r\n    headerLink: ReactNode;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrency;\r\n    additionalLineItems?: ReactNode;\r\n}\r\n\r\nconst OrderSummary: FunctionComponent<OrderSummaryProps & OrderSummarySubtotalsProps> = ({\r\n    isTaxIncluded,\r\n    taxes,\r\n    storeCurrency,\r\n    shopperCurrency,\r\n    headerLink,\r\n    additionalLineItems,\r\n    lineItems,\r\n    total,\r\n    ...orderSummarySubtotalsProps\r\n}) => {\r\n    const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\r\n    const displayInclusiveTax = isTaxIncluded && taxes && taxes.length > 0;\r\n\r\n    const { newFontStyle } = useStyleContext();\r\n\r\n    return (\r\n        <article className=\"cart optimizedCheckout-orderSummary\" data-test=\"cart\">\r\n            <OrderSummaryHeader>{headerLink}</OrderSummaryHeader>\r\n\r\n            <OrderSummarySection>\r\n                <OrderSummaryItems displayLineItemsCount items={nonBundledLineItems} newFontStyle={newFontStyle} />\r\n            </OrderSummarySection>\r\n\r\n            <Extension region={ExtensionRegion.SummaryLastItemAfter} />\r\n\r\n            <OrderSummarySection>\r\n                <OrderSummarySubtotals isTaxIncluded={isTaxIncluded} taxes={taxes} {...orderSummarySubtotalsProps} />\r\n                {additionalLineItems}\r\n            </OrderSummarySection>\r\n\r\n            <OrderSummarySection>\r\n                <OrderSummaryTotal\r\n                    orderAmount={total}\r\n                    shopperCurrencyCode={shopperCurrency.code}\r\n                    storeCurrencyCode={storeCurrency.code}\r\n                />\r\n            </OrderSummarySection>\r\n\r\n            {displayInclusiveTax && <OrderSummarySection>\r\n                <h5\r\n                    className={classNames('cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary',\r\n                        { 'body-regular': newFontStyle })}\r\n                    data-test=\"tax-text\"\r\n                >\r\n                    <TranslatedString\r\n                        id=\"tax.inclusive_label\"\r\n                    />\r\n                </h5>\r\n                {(taxes || []).map((tax, index) => (\r\n                    <OrderSummaryPrice\r\n                        amount={tax.amount}\r\n                        key={index}\r\n                        label={tax.name}\r\n                        testId=\"cart-taxes\"\r\n                    />\r\n                ))}\r\n            </OrderSummarySection>}\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default OrderSummary;\r\n"],"names":["headerId","messageId","isModalOpen","action","actionButtonLabel","onRequestClose","noop","shouldShowCloseButton","additionalModalClassName","footer","onClick","size","Small","variant","Primary","id","header","role","isOpen","mapToCartSummaryProps","context","getConfig","getCustomer","checkout","getCheckout","config","customer","redeemableProps","isStoreCreditApplied","grandTotal","storeCredit","isShippingDiscountDisplayEnabled","checkoutSettings","isBuyNowCart","cart","shopperCurrency","cartUrl","links","cartLink","storeCurrency","currency","storeCreditAmount","Math","min","undefined","memo","className","url","isMultiShippingMode","useState","setIsModalOpen","newFontStyle","window","location","assign","href","target","withRedeemable","OriginalComponent","props","headerLink","onRemovedCoupon","onRemovedGiftCertificate","subtotal","discountAmount","isTaxIncluded","giftCertificates","consignments","handlingCostTotal","shippingCostBeforeDiscount","giftWrappingCostTotal","coupons","taxes","fees","allConsignmentsHaveSelectedShippingOption","hasSelectedShippingOptions","subtotalAmount","giftWrappingAmount","shippingAmount","getShippingCostAfterAutomaticDiscount","shippingAmountBeforeDiscount","handlingAmount","mapToOrderSummarySubtotalsProps","additionalLineItems","Redeemable","lineItems","total","outstandingBalance","children","TranslatedString","orderSummarySubtotalsProps","nonBundledLineItems","useMemo","removeBundledItems","displayInclusiveTax","length","OrderSummarySection","OrderSummaryItems","displayLineItemsCount","items","Extension","region","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","shopperCurrencyCode","code","storeCurrencyCode","map","tax","index","OrderSummaryPrice","amount","key","label","name","testId"],"sourceRoot":""}